---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment-datacenter
  namespace: grafana-monitoring-datacenter
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: grafana-deployment-xfusion
  name: grafana-deployment-xfusion
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana-deployment-xfusion
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: grafana-deployment-xfusion
    spec:
      containers:
      - image: grafana/grafana:latest
        name: grafana
        ports:
        - containerPort: 3000
        resources: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: grafana-deployment-xfusion
  name: grafana-service-xfusion
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
    nodePort: 32000
  selector:
    app: grafana-deployment-xfusion
  type: NodePort
status:
  loadBalancer: {}


    spec:
      containers:
      - name: grafana-container-datacenter
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        resources:
          limits:
            memory: "2Gi"
            cpu: "1000m"
          requests:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
      volumes:
      - name: grafana-storage
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service-datacenter
  namespace: grafana-monitoring-datacenter
spec:
  type: NodePort
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 32000
  selector:
    app: grafana

